// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String @unique
  hash  String
  firstName String?
  lastName  String?
  bookmarks Bookmark[]
  imapConfiguration ImapConfiguration[]
  databaseConfiguration DatabaseConfiguration[]
  flows Flow[]
  @@map("users")
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title       String
  description String?
  link        String
  userId Int
  user   User @relation(fields: [userId], references: [id])
  @@map("bookmarks")
}

model ImapConfiguration {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email String
  host  String
  port Int
  tls   Boolean
  userId Int
  user   User @relation(fields: [userId], references: [id])
  imapSteps ImapStep[]
}

model DatabaseConfiguration {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  system String
  server String
  username String
  password String
  database String
  port Int
  userId Int
  user   User @relation(fields: [userId], references: [id])
}

model Flow {
 id        Int      @id @default(autoincrement())
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 name String
 userId Int
 user   User @relation(fields: [userId], references: [id])
 flowRuns FlowRun[]
 imapStep ImapStep?
 Step Step[]
}

model Email{
  id        Int      @id @default(autoincrement())
  subject String
  body String
  bodyPreview String
  mesageId String
  internetMesageId String
  conversationId String
}

model ImapStep{
  id        Int      @id @default(autoincrement())
  imapConfigurationId Int
  imapConfiguration   ImapConfiguration @relation(fields: [imapConfigurationId], references: [id])
  flowId Int @unique
  flow   Flow @relation(fields: [flowId], references: [id])
}

model FlowRun{
  id        Int      @id @default(autoincrement())
  startedAt DateTime @default(now())
  finishedAt DateTime @default(now())
  flowId Int
  flow   Flow @relation(fields: [flowId], references: [id])
}

model ParameterType{
  id        Int      @id @default(autoincrement())
  name String
  parameters Parameter[]
}

model Parameter{
  id        Int      @id @default(autoincrement())
  index   Int
  name String
  parameterTypeId Int
  parameterType   ParameterType @relation(fields: [parameterTypeId], references: [id])
  expressionId Int
  expression   Expression @relation(fields: [expressionId], references: [id])
}

model Expression{
  id        Int      @id @default(autoincrement())
  name String
  parameters Parameter[]
  steps Step[]
}

model Step{
  id        Int      @id @default(autoincrement())
  input String
  output String
  name String
  expressionId Int @unique
  expression   Expression @relation(fields: [expressionId], references: [id])
  flowId Int @unique
  flow   Flow @relation(fields: [flowId], references: [id])
  stepBeforeId Int @unique
  stepBefore Step @relation(fields: [stepBeforeId], references: [id])
}